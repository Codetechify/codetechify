name: Update Project Status and Create Branch

on:
  issues:
    types: [labeled]

jobs:
  update-status-and-create-branch:
    runs-on: ubuntu-latest
    if: github.event.label.name == 'doing'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch Necessary IDs
        uses: octokit/graphql-action@v2.x
        id: fetch_ids
        with:
          query: |
            query getNecessaryIds($login: String!, $name: String!, $last: Int, $labels: [String!], $number: Int!, $first: Int, $first2: Int) {
              organization(login: $login) {
                repository(name: $name) {
                  issues(last: $last, labels: $labels) {
                    nodes {
                      id
                    }
                  }
                  projectV2(number: $number) {
                    id
                    fields(first: $first) {
                      nodes {
                        ... on ProjectV2SingleSelectField {
                          id
                          name
                          options {
                            id
                            name
                          }
                        }
                      }
                    }
                    items(first: $first2) {
                      nodes {
                        id
                      }
                    }
                  }
                }
              }
            }
          variables: |
            {
              "login": "Codetechify",
              "name": "codetechify-repo",
              "last": 1,
              "labels": ["feature"],
              "number": 2,
              "first": 10,
              "first2": 10
            }
          token: ${{ secrets.CODETECHIFY_ACCESS_TOKEN }}

      - name: Update Project Status
        uses: octokit/graphql-action@v2.x
        with:
          query: |
            mutation updateStatus($input: Update
            GPT
            The error you encountered, "Invalid action input 'github-token'," suggests there's an issue with the way the GitHub token is being used in the workflow. In the GitHub Actions workflow, when using actions that interact with the GitHub API, you typically use the secrets.GITHUB_TOKEN which is automatically created by GitHub for each repository. This token is used to authenticate in a workflow run.

            However, since you are using a custom secret token (secrets.CODETECHIFY_ACCESS_TOKEN), it's important to ensure this secret is properly set in your repository's secrets settings. Also, the usage of the token in the workflow steps needs to be correctly formatted.

            Let's modify the workflow to correct this issue:

            yaml
            Copy code
            name: Update Project Status and Create Branch

            on:
              issues:
                types: [labeled]

            jobs:
              update-status-and-create-branch:
                runs-on: ubuntu-latest
                if: github.event.label.name == 'doing'
                steps:
                  - name: Checkout
                    uses: actions/checkout@v2

                  - name: Fetch Necessary IDs
                    uses: octokit/graphql-action@v2.x
                    id: fetch_ids
                    with:
                      query: |
                        query getNecessaryIds($login: String!, $name: String!, $last: Int, $labels: [String!], $number: Int!, $first: Int, $first2: Int) {
                          organization(login: $login) {
                            repository(name: $name) {
                              issues(last: $last, labels: $labels) {
                                nodes {
                                  id
                                }
                              }
                              projectV2(number: $number) {
                                id
                                fields(first: $first) {
                                  nodes {
                                    ... on ProjectV2SingleSelectField {
                                      id
                                      name
                                      options {
                                        id
                                        name
                                      }
                                    }
                                  }
                                }
                                items(first: $first2) {
                                  nodes {
                                    id
                                  }
                                }
                              }
                            }
                          }
                        }
                      variables: |
                        {
                          "login": "Codetechify",
                          "name": "codetechify-repo",
                          "last": 1,
                          "labels": ["feature"],
                          "number": 2,
                          "first": 10,
                          "first2": 10
                        }
                      token: ${{ secrets.CODETECHIFY_ACCESS_TOKEN }}

                  - name: Update Project Status
                    uses: octokit/graphql-action@v2.x
                    with:
                      query: |
                        mutation updateStatus($input: Update
            ProjectV2ItemFieldValueInput!) {
            updateProjectV2ItemFieldValue(input: $input) {
            projectV2Item {
            id
            }
            }
            }
            variables: |
            {
            "input": {
            "projectId": "PVT_kwDOCRRl0s4AamKs",
            "fieldId": "PVTSSF_lADOCRRl0s4AamKszgREJyE",
            "itemId": "${{ fromJson(steps.fetch_ids.outputs.data).organization.repository.projectV2.items.nodes[0].id }}",
            "value": {
            "singleSelectOptionId": "47fc9ee4"
            }
            }
            }
            token: ${{ secrets.CODETECHIFY_ACCESS_TOKEN }}
            - name: Create Branch
            run: |
              git checkout -b feature/${{ github.event.issue.title }}
              git push origin feature/${{ github.event.issue.title }}
