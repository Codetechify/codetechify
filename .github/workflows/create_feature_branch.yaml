name: Workflow for Issue Updates

on:
  issues:
    types: [labeled]

jobs:
  update-project-and-create-branch:
    if: github.event.label.name == 'doing'
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.CODETECHIFY_ACCESS_TOKEN }} # Set the GH_TOKEN environment variable
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up GitHub CLI
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get last feature issue ID
        id: get_last_issue
        run: |
          LAST_ISSUE_ID=$(gh api graphql -f query='
            query getLastIssueId($login: String!, $name: String!, $last: Int, $labels: [String!], $number: Int!, $first: Int, $first2: Int) {
              organization(login: $login) {
                repository(name: $name) {
                  issues(last: $last, labels: $labels) {
                    nodes {
                      id
                    }
                  }
                  projectV2(number: $number) {
                    id
                    fields(first: $first) {
                      nodes {
                        ... on ProjectV2SingleSelectField {
                          id
                          name
                          options {
                            id
                            name
                          }
                        }
                      }
                    }
                    items(first: $first2) {
                      nodes {
                        id
                        ...on ProjectV2Item {
                          id
                        }
                      }
                    }
                  }
                }
              }
            }
          ' -f login=Codetechify -f name=codetechify-repo -f last=1 -f labels=["feature"] -f number=2 -f first=10 -f first2=10 | jq -r '.data.organization.repository.issues.nodes[0].id')
          echo "LAST_ISSUE_ID=$LAST_ISSUE_ID" >> $GITHUB_ENV

      - name: Update Project Status
        run: |
          gh api graphql -f query='
            mutation updateStatus($input: UpdateProjectV2ItemFieldValueInput!) {
              updateProjectV2ItemFieldValue(input: $input) {
                projectV2Item {
                  id
                }
              }
            }
          ' -f input='{
            "projectId": "PVT_kwDOCRRl0s4AamKs",
            "fieldId": "PVTSSF_lADOCRRl0s4AamKszgREJyE",
            "itemId": "${{ env.LAST_ISSUE_ID }}",
            "value": {
              "singleSelectOptionId": "47fc9ee4"
            }
          }'

      - name: Create Branch
        run: |
          ISSUE_NAME=$(gh issue view ${{ env.LAST_ISSUE_ID }} --json title -q .title)
          BRANCH_NAME="feature/${ISSUE_NAME// /_}"
          git checkout -b $BRANCH_NAME
          git push origin $BRANCH_NAME
