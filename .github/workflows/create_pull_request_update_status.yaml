name: Create Pull Request and Update Label

on:
  push:
    branches:
      - 'feature/*'

jobs:
  create-pull-request-and-update-label:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.CODETECHIFY_ACCESS_TOKEN }}
          persist-credentials: true

      - name: Extract Feature Branch Name and Issue Number
        run: |
          echo "feature_branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "issue_number=$(echo $GITHUB_REF | grep -oP '(?<=feature/)\d+')" >> $GITHUB_ENV
          echo "Feature Branch: ${{ env.feature_branch }}" # Debugging
          echo "Issue Number: ${{ env.issue_number }}" # Debugging

      - name: Fetch Issue Title
        id: fetch-issue
        uses: actions/github-script@v6
        with:
          script: |
            console.log("Issue number: ", process.env.issue_number); // Debugging
            if (!process.env.issue_number) {
              throw new Error('Issue number is undefined');
            }
            const issueResponse = await github.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: process.env.issue_number
            });
            const issueTitle = issueResponse.data.title;
            return issueTitle;
          github-token: ${{ secrets.CODETECHIFY_ACCESS_TOKEN }}
      - name: Create Pull Request
        if: steps.check-pr.outputs.exists == 'false'
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.CODETECHIFY_ACCESS_TOKEN }}
          pr_title: ${{ steps.fetch-issue.outputs.result }}
          pr_body: 'Automatically generated pull request. Closes #$GITHUB_ENV.issue_number'
          source_branch: '${{ env.feature_branch }}'
          destination_branch: 'main'

      - name: Replace Label and Link PR to Issue
        if: steps.check-pr.outputs.exists == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            const issueNumber = process.env.issue_number;
            const labelsResponse = await github.issues.listLabelsOnIssue({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issueNumber
            });
            const hasDoing = labelsResponse.data.some(label => label.name === 'doing');
            if (hasDoing) {
              await github.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                name: 'doing'
              });
              await github.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                labels: ['isReviewing']
              });

              // Update status here if needed, e.g., via a comment or a custom field (depends on your setup)
            }
          github-token: ${{ secrets.CODETECHIFY_ACCESS_TOKEN }}
