name: Create Feature Branch from Issue

on:
  issues:
    types: [labeled]

jobs:
  create-branch:
    if: github.event.label.name == 'doing' # Adjust the label name as needed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create branch from issue title using GraphQL
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.CODETECHIFY_ACCESS_TOKEN }}
          script: |
            const graphqlWithAuth = github.graphql.defaults({
              headers: {
                authorization: `token ${github.token}`,
              },
            });

            const title = context.payload.issue.title.toLowerCase().replace(/\s+/g, '_');
            const branchName = `feature/${title}`;
            const ref = `refs/heads/${branchName}`;

            console.log(`Creating branch: ${branchName}`);

            // GraphQL query to get default branch and latest commit SHA
            const query = `
              query repositoryDefaultBranch($owner: String!, $repo: String!) {
                repository(owner: $owner, name: $repo) {
                  defaultBranchRef {
                    name
                    target {
                      oid
                    }
                  }
                }
              }
            `;

            const response = await graphqlWithAuth(query, {
              owner: 'Codetechify',
              repo: 'codetechify-repo'
            });

            const defaultBranch = response.repository.defaultBranchRef.name;
            const sha = response.repository.defaultBranchRef.target.oid;

            // GraphQL mutation to create a new branch
            const mutation = `
              mutation createBranch($owner: String!, $repo: String!, $ref: String!, $sha: String!) {
                createRef(input: { repositoryId: $repo, name: $ref, oid: $sha }) {
                  clientMutationId
                }
              }
            `;

            await graphqlWithAuth(mutation, {
              owner: 'Codetechify',
              repo: 'codetechify-repo',
              ref: ref,
              sha: sha
            });

            console.log(`Branch ${branchName} created successfully`);

      - name: Move Issue in Project
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.CODETECHIFY_ACCESS_TOKEN }}
          script: |
            const issueId = context.payload.issue.node_id;

            // Define your project column IDs
            const backlogColumnId = 'BACKLOG_COLUMN_ID'; // Replace with actual ID
            const doingColumnId = 'DOING_COLUMN_ID'; // Replace with actual ID

            // GraphQL query to move issue from Backlog to Doing
            const mutation = `
              mutation($issueId: ID!, $columnId: ID!) {
                moveProjectCard(input: {cardId: $issueId, columnId: $columnId}) {
                  clientMutationId
                }
              }
            `;

            // Fetch issue's project card ID
            const cardIdQuery = `
              query($issueId: ID!) {
                node(id: $issueId) {
                  ... on Issue {
                    projectCards(first: 1) {
                      nodes {
                        id
                      }
                    }
                  }
                }
              }
            `;

            const cardIdResponse = await github.graphql(cardIdQuery, {
              issueId: issueId
            });

            const cardId = cardIdResponse.node.projectCards.nodes[0].id;

            // Execute the mutation
            const response = await github.graphql(mutation, {
              issueId: cardId,
              columnId: doingColumnId
            });
